name: radius
services:
  freeradius:
    container_name: freeradius
    restart: always
    build:
      context: ./services/freeradius
      dockerfile: Dockerfile
    env_file: ".env"
    depends_on:
      radius_db:
        condition: service_healthy
    environment:
      DB_TYPE: "postgresql"
      DB_SERVER: "radius_db"
      DB_PORT: "5432"
      DB_NAME: ${RADIUS_DB_DATABASE}
      DB_USER: ${RADIUS_DB_USERNAME}
      DB_PASSWORD: ${RADIUS_DB_PASSWORD}
    networks:
      - backend
      - diralink_net
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
      - "18120:18120/tcp"
    volumes:
      - "./services/freeradius/config/freeradius:/etc/freeradius"
      - "./services/freeradius/logs:/var/log/freeradius"
    healthcheck:
      test: ["CMD", "radtest", "user", "pass", "localhost", "0", "testing123"]
      interval: 30s
      timeout: 10s
      retries: 3
  radius:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: radius
    restart: always
    env_file: ".env"
    ports:
      - "4000:4000"
    networks:
      - backend
      - diralink_net
    depends_on:
      - radius_db
    # Add other app-specific configurations here

  radius_db:
    container_name: radius_db
    image: postgres:14.13-alpine
    restart: always
    env_file: ".env"
    environment:
      POSTGRES_USER: ${RADIUS_DB_USERNAME}
      POSTGRES_PASSWORD: ${RADIUS_DB_PASSWORD}
      POSTGRES_DB: ${RADIUS_DB_DATABASE}
    networks:
      - backend
      - diralink_net
    ports:
      - "5400:5432"
    volumes:
      - postgres_radius_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${RADIUS_DB_USERNAME} -d ${RADIUS_DB_DATABASE}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  diralink_net:
    driver: bridge
  backend:
    external: true

volumes:
  postgres_radius_data:
