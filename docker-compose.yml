name: diralink
services:
  freeradius:
    container_name: diralink-radius
    restart: always
    build:
      context: ./services/freeradius
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_healthy
    environment:
      DB_TYPE: "postgresql"
      DB_SERVER: ${DB_HOST}
      DB_PORT: "5432"
      DB_NAME: ${DB_DATABASE}
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - backend
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
      - "18120:18120/tcp"
    volumes:
      - "./freeradius/config/freeradius:/etc/freeradius"
      - "./services/freeradius/logs:/var/log/freeradius"
    healthcheck:
      test: ["CMD", "radtest", "user", "pass", "localhost", "0", "testing123"]
      interval: 30s
      timeout: 10s
      retries: 3
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: diralink-backend
    networks:
      - backend
    depends_on:
      - freeradius
      - db
    environment:
      - DATABASE_URL=ecto://postgres:postgres@db/radius_dev
    # Add other app-specific configurations here

  db:
    container_name: diralink-radius-db
    image: postgres:14.13-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - backend
    ports:
      - "54322:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  backend:
    external: true

volumes:
  logs:
  postgres_data:
